{"version":3,"sources":["services/fetcher.js","pages/FilmDetailsPage.js"],"names":["axios","defaults","baseURL","fetchFilmsList","a","get","films","console","log","fetchFilmDetail","id","film","fetchPlanetDetail","planet","fetchStarshipDetail","starship","getIdFromProps","props","match","params","Film","lazy","FilmDetailsPage","state","massage","search","from","getFilmDetail","Number","setState","data","message","handleGoBack","history","push","pathname","this","location","fallback","onGoBack","Component"],"mappings":"qSAEAA,IAAMC,SAASC,QAAU,yBAElB,IAAMC,EAAc,uCAAG,4BAAAC,EAAA,+EAENJ,IAAMK,IAAI,UAFJ,cAEpBC,EAFoB,yBAGnBA,GAHmB,gCAK1BC,QAAQC,IAAR,MAL0B,yDAAH,qDASdC,EAAe,uCAAG,WAAMC,GAAN,eAAAN,EAAA,+EAERJ,IAAMK,IAAN,gBAAmBK,IAFX,cAErBC,EAFqB,yBAGpBA,GAHoB,gCAK3BJ,QAAQC,IAAR,MAL2B,yDAAH,sDASfI,EAAiB,uCAAG,WAAMF,GAAN,eAAAN,EAAA,+EAERJ,IAAMK,IAAN,kBAAqBK,IAFb,cAEvBG,EAFuB,yBAGtBA,GAHsB,gCAK7BN,QAAQC,IAAR,MAL6B,yDAAH,sDASjBM,EAAmB,uCAAG,WAAMJ,GAAN,eAAAN,EAAA,+EAERJ,IAAMK,IAAN,oBAAuBK,IAFf,cAEzBK,EAFyB,yBAGxBA,GAHwB,gCAK/BR,QAAQC,IAAR,MAL+B,yDAAH,uD,oKC5B1BQ,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOT,IAE7CU,EAAOC,gBAAK,kBAChB,gCAGmBC,E,4MACnBC,MAAQ,CACNZ,KAAM,KACNa,QAAS,KACTC,OAAQ,GACRC,KAAM,GACNb,OAAQ,M,EAYVc,c,sBAAgB,8BAAAvB,EAAA,sEAENM,EAAKkB,OAAOZ,EAAe,EAAKC,QAF1B,SAGOR,YAAgBC,GAHvB,OAGNC,EAHM,OAIZ,EAAKkB,SAAS,CACZlB,KAAMA,EAAKmB,OALD,gDAQZ,EAAKD,SAAS,CAAEE,QAAO,OARX,yD,EAYhBC,aAAe,WACb,EAAKT,MAAME,OACP,EAAKR,MAAMgB,QAAQC,KAAK,CACtBC,SAAU,EAAKZ,MAAMG,KACrBD,OAAO,SAAD,OAAW,EAAKF,MAAME,QAC5BF,MAAO,CAAEE,OAAQ,EAAKF,MAAME,UAE9B,EAAKR,MAAMgB,QAAQC,KAAK,M,kEA3B5BE,KAAKnB,MAAMoB,SAASd,OAClBa,KAAKP,SAAS,CACZJ,OAAQW,KAAKnB,MAAMoB,SAASd,MAAME,OAClCC,KAAMU,KAAKnB,MAAMoB,SAASd,MAAMG,OAEpCU,KAAKT,kB,+BAyBG,IACAhB,EAAQyB,KAAKb,MAAbZ,KACFD,EAAKkB,OAAOZ,EAAeoB,KAAKnB,QACtC,OACEN,GACE,kBAAC,WAAD,CAAU2B,SAAU,2CAClB,kBAAClB,EAAD,iBAAUT,EAAV,CAAgBD,GAAIA,EAAI6B,SAAUH,KAAKJ,qB,GA9CJQ","file":"static/js/filmDetails-page.7f0c54dc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://swapi.dev/api/';\r\n\r\nexport const fetchFilmsList = async () => {\r\n  try {\r\n    const films = await axios.get('films/');\r\n    return films;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchFilmDetail = async id => {\r\n  try {\r\n    const film = await axios.get(`films/${id}`);\r\n    return film;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchPlanetDetail = async id => {\r\n  try {\r\n    const planet = await axios.get(`planets/${id}`);\r\n    return planet;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchStarshipDetail = async id => {\r\n  try {\r\n    const starship = await axios.get(`starships/${id}`);\r\n    return starship;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { fetchFilmDetail} from '../services/fetcher';\r\n\r\nconst getIdFromProps = props => props.match.params.id;\r\n\r\nconst Film = lazy(() =>\r\n  import('../components/film/Film' /* webpackChunkName: 'film' */),\r\n);\r\n\r\nexport default class FilmDetailsPage extends Component {\r\n  state = {\r\n    film: null,\r\n    massage: null,\r\n    search: '',\r\n    from: '',\r\n    planet: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.location.state &&\r\n      this.setState({\r\n        search: this.props.location.state.search,\r\n        from: this.props.location.state.from,\r\n      });\r\n    this.getFilmDetail();\r\n  }\r\n\r\n  getFilmDetail = async () => {\r\n    try {\r\n      const id = Number(getIdFromProps(this.props));\r\n      const film = await fetchFilmDetail(id);\r\n      this.setState({\r\n        film: film.data,\r\n      });\r\n    } catch (message) {\r\n      this.setState({ message });\r\n    }\r\n  };\r\n\r\n  handleGoBack = () => {\r\n    this.state.search\r\n      ? this.props.history.push({\r\n          pathname: this.state.from,\r\n          search: `query=${this.state.search}`,\r\n          state: { search: this.state.search },\r\n        })\r\n      : this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { film} = this.state;\r\n    const id = Number(getIdFromProps(this.props));\r\n    return (\r\n      film && (\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Film {...film} id={id} onGoBack={this.handleGoBack} />\r\n        </Suspense>\r\n      )\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}