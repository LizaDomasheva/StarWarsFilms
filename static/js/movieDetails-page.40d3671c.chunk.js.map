{"version":3,"sources":["services/fetcher.js","pages/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","fetchFilmsList","a","get","films","setState","error","fetchFilmDetail","id","film","console","log","fetchPlanetDetail","planet","fetchStarshipDetail","starship","getIdFromProps","props","match","params","Movie","lazy","MovieDetailsPage","state","movie","massage","search","from","getFilmDetail","Number","data","message","handleGoBack","history","push","pathname","this","location","fallback","onGoBack","Component"],"mappings":"8SAIAA,IAAMC,SAASC,QAAU,yBAGlB,IAAMC,EAAc,uCAAG,4BAAAC,EAAA,+EAENJ,IAAMK,IACxB,UAHwB,cAEpBC,EAFoB,yBAKnBA,GALmB,gCAO1B,EAAKC,SAAS,CAAEC,MAAM,EAAD,KAPK,yDAAH,qDAWdC,EAAe,uCAAG,WAAOC,GAAP,eAAAN,EAAA,+EAENJ,IAAMK,IAAN,gBACRK,IAHc,cAEnBC,EAFmB,yBAKlBA,GALkB,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,sDAWdC,EAAiB,uCAAG,WAAOJ,GAAP,eAAAN,EAAA,+EAEPJ,IAAMK,IAAN,kBACRK,IAHe,cAEtBK,EAFsB,yBAKrBA,GALqB,gCAO/BH,QAAQC,IAAR,MAP+B,yDAAH,sDAYjBG,EAAmB,uCAAG,WAAON,GAAP,eAAAN,EAAA,+EAEPJ,IAAMK,IAAN,oBACRK,IAHe,cAExBO,EAFwB,yBAKvBA,GALuB,gCAOjCL,QAAQC,IAAR,MAPiC,yDAAH,uD,oKCrC3BK,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOX,IAE7CY,EAAQC,gBAAK,kBACjB,gCAGmBC,E,4MACnBC,MAAQ,CACNC,MAAO,KACPC,QAAS,KACTC,OAAQ,GACRC,KAAM,GACNd,OAAQ,M,EAYVe,c,sBAAgB,8BAAA1B,EAAA,sEAENM,EAAKqB,OAAOb,EAAe,EAAKC,QAF1B,SAGQV,YAAgBC,GAHxB,OAGNgB,EAHM,OAIZ,EAAKnB,SAAS,CACZmB,MAAOA,EAAMM,OALH,gDAQZ,EAAKzB,SAAS,CAAE0B,QAAO,OARX,yD,EAYhBC,aAAe,WACb,EAAKT,MAAMG,OACP,EAAKT,MAAMgB,QAAQC,KAAK,CACtBC,SAAU,EAAKZ,MAAMI,KACrBD,OAAO,SAAD,OAAW,EAAKH,MAAMG,QAC5BH,MAAO,CAAEG,OAAQ,EAAKH,MAAMG,UAE9B,EAAKT,MAAMgB,QAAQC,KAAK,M,kEA3B5BE,KAAKnB,MAAMoB,SAASd,OAClBa,KAAK/B,SAAS,CACZqB,OAAQU,KAAKnB,MAAMoB,SAASd,MAAMG,OAClCC,KAAMS,KAAKnB,MAAMoB,SAASd,MAAMI,OAEpCS,KAAKR,kB,+BAyBG,IACAJ,EAASY,KAAKb,MAAdC,MACFhB,EAAKqB,OAAOb,EAAeoB,KAAKnB,QACtC,OACEO,GACE,kBAAC,WAAD,CAAUc,SAAU,2CAClB,kBAAClB,EAAD,iBAAWI,EAAX,CAAkBhB,GAAIA,EAAI+B,SAAUH,KAAKJ,qB,GA9CLQ","file":"static/js/movieDetails-page.40d3671c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.baseURL = 'https://swapi.dev/api/'\r\n\r\n\r\nexport const fetchFilmsList = async () => {\r\n  try {\r\n    const films = await axios.get(\r\n      \"films/\",\r\n    );\r\n    return films\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n};\r\n\r\nexport const fetchFilmDetail = async (id) => {\r\n  try {\r\n      const film = await axios.get(\r\n        `films/${id}`,\r\n      );\r\n      return film\r\n  } catch (error) {\r\n   console.log(error);\r\n  }\r\n };\r\n\r\n export const fetchPlanetDetail = async (id) => {\r\n  try {\r\n      const planet = await axios.get(\r\n        `planets/${id}`,\r\n      );\r\n      return planet\r\n  } catch (error) {\r\n   console.log(error);\r\n  }\r\n };\r\n\r\n\r\n export const fetchStarshipDetail = async (id) => {\r\n  try {\r\n      const starship = await axios.get(\r\n        `starships/${id}`,\r\n      );\r\n      return starship\r\n  } catch (error) {\r\n   console.log(error);\r\n  }\r\n };\r\n\r\n\r\n\r\n","import React, { Component, lazy, Suspense } from 'react';\r\n// import Movie from '../components/movie/Movie';\r\nimport { fetchFilmDetail} from '../services/fetcher';\r\n\r\nconst getIdFromProps = props => props.match.params.id;\r\n\r\nconst Movie = lazy(() =>\r\n  import('../components/movie/Movie.js' /* webpackChunkName: 'movie' */),\r\n);\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: null,\r\n    massage: null,\r\n    search: '',\r\n    from: '',\r\n    planet: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.location.state &&\r\n      this.setState({\r\n        search: this.props.location.state.search,\r\n        from: this.props.location.state.from,\r\n      });\r\n    this.getFilmDetail();\r\n  }\r\n\r\n  getFilmDetail = async () => {\r\n    try {\r\n      const id = Number(getIdFromProps(this.props));\r\n      const movie = await fetchFilmDetail(id);\r\n      this.setState({\r\n        movie: movie.data,\r\n      });\r\n    } catch (message) {\r\n      this.setState({ message });\r\n    }\r\n  };\r\n\r\n  handleGoBack = () => {\r\n    this.state.search\r\n      ? this.props.history.push({\r\n          pathname: this.state.from,\r\n          search: `query=${this.state.search}`,\r\n          state: { search: this.state.search },\r\n        })\r\n      : this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { movie} = this.state;\r\n    const id = Number(getIdFromProps(this.props));\r\n    return (\r\n      movie && (\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Movie {...movie} id={id} onGoBack={this.handleGoBack} />\r\n        </Suspense>\r\n      )\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}